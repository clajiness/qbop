name: qbop_ci

on:
  push:
    branches:
      - "**"
      - "!main"
  pull_request:
    types:
      - closed

jobs:
  build:
    permissions:
      actions: read
      contents: read
      packages: write
      security-events: read
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Log in to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Read file contents
        uses: guibranco/github-file-reader-action-v2@82e920745598e102c9d65c72da3e1002c581f64e # v2.2.851
        id: file-contents
        with:
          path: "version.yml"
      -
        name: Trim file contents # this step removes newline characters that the editor may add to the end of the file
        id: trim-file-contents
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          VERSION_RAW: ${{ steps.file-contents.outputs.contents }}
        with:
          script: |
            const versionRaw = process.env.VERSION_RAW;
            const versionFormatted = versionRaw.trim();
            core.setOutput('version_formatted', versionFormatted)
      -
        name: Check if tag exists
        uses: action-pack/tag-exists@e3a3c2baef96878a14417f8c1424e6da5c2167bd # v1.08
        id: check-tag
        with: 
          tag: ${{ steps.trim-file-contents.outputs.version_formatted}}
      -
        name: Build and push to non-main
        if: github.event.pull_request.base.ref != 'main' && (steps.check-tag.outputs.exists == 'false' || steps.check-tag.outputs.exists == '')
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        env:
            VERSION: ${{ steps.file-contents.outputs.contents }}
        with:
          build-args: VERSION=${{ env.VERSION }}
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.VERSION }}
      -
        name: Build and push to main
        if: github.event.pull_request.base.ref == 'main' && github.event.pull_request.merged == true && (steps.check-tag.outputs.exists == 'false' || steps.check-tag.outputs.exists == '')
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        env:
            VERSION: ${{ steps.file-contents.outputs.contents }}
        with:
          build-args: VERSION=${{ env.VERSION }}
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: 
            ghcr.io/${{ github.repository }}:latest,
            ghcr.io/${{ github.repository }}:${{ env.VERSION }}
